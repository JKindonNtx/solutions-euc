---
- name: "Create resource group: {{ resource_group }}"
  azure_rm_resourcegroup:
    name: "{{ resource_group }}"
    location: "{{ location }}"
  register: rg
- debug:
    var: rg
      
- name: "Create network interface: {{ vm_name }}_nic001"
  azure_rm_networkinterface:
    name: "{{ vm_name }}_nic001"
    location: "{{ location }}"
    resource_group: "{{ resource_group }}"
    virtual_network: "{{ virtual_network }}"
    subnet_name: "{{ subnet }}"
    dns_servers:
      - "{{ dns_server_a }}"
      - "{{ dns_server_b }}"
      - "{{ dns_server_c }}"
    enable_accelerated_networking: "{{ accelerated_networking }}"
    create_with_security_group: false
    ip_configurations:
      - name: ipconfig1
        primary: true
  register: nic
- debug:
    var: nic

- name: "Create VM: {{ vm_name }}"
  azure_rm_virtualmachine:
    resource_group: "{{ resource_group }}"
    name: "{{ vm_name }}"
    vm_size: "{{ vm_sku }}"
    admin_username: "{{ admin_username }}"
    admin_password: "{{ admin_password }}"
    license_type: "{{ license_type }}"
    managed_disk_type: "{{ disk_sku }}"
    network_interfaces: "{{ nic.state.id }}"
    os_disk_name: "{{ vm_name }}_osdisk"
    os_disk_size_gb: "{{ disk_size }}"
    os_type: Windows
    image:
        offer: "{{ offer }}" 
        publisher: "{{ publisher }}"
        sku: "{{ sku }}"
        version: latest
    boot_diagnostics:
      enabled: true
      type: "managed"
  register: vm
- debug:
    var: vm

- name: "Create VM script extension to enable HTTPS WinRM listener: {{ vm_name }}"
  azure_rm_virtualmachineextension:
    name: winrm-extension
    resource_group: "{{ resource_group }}"
    virtual_machine_name: "{{ vm_name }}"
    publisher: Microsoft.Compute
    virtual_machine_extension_type: CustomScriptExtension
    type_handler_version: '1.9'
    settings: '{"fileUris": ["https://raw.githubusercontent.com/ansible/ansible-documentation/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"],"commandToExecute": "powershell -ExecutionPolicy Unrestricted -File ConfigureRemotingForAnsible.ps1"}'
    auto_upgrade_minor_version: true
  register: vmextension
- debug:
    var: vmextension

- name: "Gather facts about Azure network interface: {{ vm_name }}_nic001"
  azure.azcollection.azure_rm_networkinterface_info:
    resource_group: "{{ resource_group }}"
    name: "{{ vm_name }}_nic001"
  register: nic_facts

#- name: "Wait for the WinRM port to come online: {{ vm_name }} at {{ nic_facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}"
#  wait_for:
#    port: "{{ winrm_port }}"
#    host: '{{ nic_facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}'
#    timeout: "{{ winrm_timeout }}"

#- name: join host {{ vm_name }} to domain {{ domain_fqdn}} with automatic reboot
#  microsoft.ad.membership:
#    dns_domain_name: {{ domain_fqdn }}
#    hostname: "{{ vm_name }}"
#    domain_admin_user: "{{ ansible_domain_user }}"
#    domain_admin_password: "{{ ansible_password }}"
#    domain_ou_path: "{{ domain_ou_path }}"
#    state: domain
#    reboot: true

#- name: "Wait for the WinRM port to come online: {{ vm_name }} at {{ nic_facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}"
#  wait_for:
#    port: "{{ winrm_port }}"
#    host: '{{ nic_facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}'
#    timeout: "{{ winrm_timeout }}"

- name: Set target host variable for image build phase
  set_fact:
    target_host: "{{ nic_facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}"

- name: Set OS Disk ID variable for snapshot creation
  set_fact:
    os_disk_id: "{{ vm.ansible_facts.azure_vm.storage_profile.os_disk.managed_disk.id }}"